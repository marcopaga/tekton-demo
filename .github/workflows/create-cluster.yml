name: create-cluster

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set output
        id: vars
        run: echo ::set-output name=branch_name::${GITHUB_REF#refs/*/}

      - name: Install Tools Flux, Tekton CLI & jq
        run: |
          brew install fluxcd/tap/flux
          brew tap tektoncd/tools
          brew install tektoncd/tools/tektoncd-cli
          brew install jq

      - uses: AbsaOSS/k3d-action@v1.5.0
        name: "Bootstrap K3d"
        with:
          cluster-name: "k3d-testcluster"
          args: >-
            -p "8080:8080@agent:0:direct"
            --agents 1
            --image docker.io/rancher/k3s:v1.20.4-k3s1
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      # See creation of Personal Access Token at https://fluxcd.io/docs/cmd/flux_bootstrap_github/
      - name: Install Flux into K3d cluster & connect to GitHub repository https://github.com/marcopaga/tekton-demo
        run: |
          GITHUB_TOKEN=${{ secrets.FLUX_GITHUB_TOKEN }} flux bootstrap github \
          --owner=${{ github.repository_owner }} \
          --repository=${{ github.event.repository.name }} \
          --private=false \
          --personal=true \
          --branch=${{ steps.vars.outputs.branch_name }} \
          --path=clusters/local

      - name: Wait for Flux CRD Deployment
        timeout-minutes: 3
        continue-on-error: true
        run: |
          { grep -q -m 1 "kustomizations.kustomize.toolkit.fluxcd.io"; kill $!; } < <(kubectl get crd -w)
          kubectl -n default wait --for condition=established --timeout=180s crd/kustomizations.kustomize.toolkit.fluxcd.io

      - name: Wait for Kustomizations to be ready
        timeout-minutes: 5
        continue-on-error: true
        run: |
          kubectl -n flux-system wait --for=condition=READY=True --timeout=60s kustomizations.kustomize.toolkit.fluxcd.io/flux-system
          kubectl -n flux-system wait --for=condition=READY=True --timeout=60s kustomizations.kustomize.toolkit.fluxcd.io/tekton-base
          kubectl -n flux-system wait --for=condition=READY=True --timeout=60s kustomizations.kustomize.toolkit.fluxcd.io/tekton-tasks
          kubectl -n flux-system wait --for=condition=READY=True --timeout=60s kustomizations.kustomize.toolkit.fluxcd.io/tekton-triggers
          kubectl -n flux-system wait --for=condition=READY=True --timeout=60s kustomizations.kustomize.toolkit.fluxcd.io/tekton-ci-config

      - name: Introspection
        run: |
          kubectl get namespaces
          kubectl get pods --all-namespaces
          kubectl get deployments --all-namespaces
          kubectl get Kustomization -n flux-system

      - name: Show Tekton tasks and pipelines
        run: |
          tkn task list --all-namespaces
          tkn pipeline list --all-namespaces

      - name: Execute and verify hello-world pipeline is run to completion
        run: |
          PIPELINE_RUN_NAME=$(kubectl create -n tekton-pipelines -f ./hello-goodbye-pipeline-run.yaml -o json | jq -r '.metadata.name')
          kubectl -n tekton-pipelines wait --for=condition=SUCCEEDED=True --timeout=60s pipelineruns.tekton.dev/$PIPELINE_RUN_NAME
          tkn pr --namespace tekton-pipelines logs $PIPELINE_RUN_NAME

